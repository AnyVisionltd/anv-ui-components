@import '~@anyvision/style-guide';

.progressText {
  text-transform: uppercase;
  align-self: start;
  text-align: left;
  color: av-color(primary);
  margin-bottom: 0;
  white-space: nowrap;
  letter-spacing: 1.1px;
  text-shadow: -0.01ex 0 currentColor, 0.01ex 0 currentColor;
}

.lineProgress {
  overflow: hidden;
  position: relative;
  width: 100%;
  height: 4px;
  background-color: av-color(primary, av-opacity(disabled));
  color: av-color(primary);

  .lineBar {
    background-color: currentColor;
    height: 4px;
    transition: width 0.4s;
  }

  @keyframes indeterminate-animation {
    0% {
      left: -5%;
      width: 5%;
    }
    50% {
      width: 25%;
    }
    100% {
      left: 100%;
      width: 5%;
    }
  }

  .indeterminate {
    position: absolute;
    animation: indeterminate-animation 1.5s ease-in-out infinite;
  }
}

.circleProgress {
  transform: rotate(-90deg);
  height: 48px;
  width: 48px;
  color: av-color(primary);

  @keyframes circle-indeterminate {
    to {
      transform: rotate(270deg);
    }
  }

  &.indeterminate {
    animation: circle-indeterminate 1s linear infinite;
  }

  .circleBar {
    fill: transparent;
    stroke: currentColor;
    stroke-width: 4px;
    transition: stroke-dashoffset 0.35s;
  }
}

@keyframes expandIn {
  0% {
    opacity: 0;
    transform: scale(1.2);
  }
  90% {
    opacity: 1;
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

%text-container {
  border-radius: av-radius();
  padding: av-space(micro);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease-in-out;
  text-transform: uppercase;
  @extend %av-subtitle1;
}

%icon {
  width: av-size(sz-24);
  height: av-size(sz-24);
  fill: currentColor;
}

.inQueueContainer {
  @extend %text-container;
  color: av-color(primary);

  &:hover {
    background: av-color(primary, av-opacity(disabled));
  }

  svg {
    @extend %icon;
  }
}

.resultContainer {
  @extend %text-container;
  animation: expandIn 0.25s;

  &.success {
    color: av-color(success);

    &:hover {
      background: av-color(success, av-opacity(disabled));
    }
  }

  &.error {
    color: av-color(error);

    &:hover {
      background-color: av-color(error, av-opacity(disabled));
    }
  }

  svg {
    @extend %icon;
  }
}
