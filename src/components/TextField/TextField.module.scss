@import '~@anyvision/style-guide';

.container {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;

  svg {
    width: 24px;
    height: 24px;
  }

  .textField {
    cursor: default;
    outline: none;
    position: relative;
    text-decoration: none;
    border-radius: av-radius(tidy);
    padding: 0 av-space();
    display: flex;
    flex-direction: column;
    height: av-size(sz-56);
    width: 100%;
    box-sizing: border-box;

    &.small {
      height: av-size(sz-40);

      &:focus-within,
      &.notEmpty {
        label {
          display: none;
        }
      }
    }

    &.medium {
      .bottom {
        input {
          margin-top: av-space(base);
        }
        textarea {
          margin-top: 20px;
        }
      }
    }

    &.readOnly {
      input,
      .label {
        cursor: default;
      }
    }

    &:focus-within,
    &.notEmpty,
    &.active {
      label {
        top: av-space(micro);
        font-size: av-font-size(tiny);
        transform: translateY(2px);
        color: av-color(content, av-opacity(medium));
      }

      ::placeholder {
        visibility: unset;
      }
    }

    &:not(.withLabel) {
      ::placeholder {
        visibility: unset;
      }
    }

    &.disabled {
      cursor: default;

      .label {
        color: av-color(content, av-opacity(disabled));
      }
    }

    &.active {
      &.fill:not(.error) {
        border-bottom: solid 2px av-color(primary);
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        fill: av-color(primary);

        .label {
          color: av-color(primary);
        }

        .leadingIcon {
          fill: av-color(primary);
        }

        &.options {
          fill: av-color(content);
        }
      }

      &.outline:not(.error) {
        box-shadow: inset 0 0 0 2px av-color(primary);
        fill: av-color(primary);
        border: solid 1px transparent;

        .label {
          color: av-color(primary);
        }

        .leadingIcon {
          fill: av-color(primary);
        }

        &.options {
          fill: av-color(content);
          box-shadow: inset 0 0 0 2px av-color(primary);
        }
      }
    }
  }

  .multiline {
    height: unset;
    .label {
      top: 0;
      transform: translateY(16px);
    }
  }

  .fill {
    color: av-color(purewhite);
    background-color: av-color(content, av-opacity(ghost));
    border-bottom: solid 2px av-color(content, av-opacity(divider));
    fill: av-color(content);

    &:hover:not(.active):not(.error):not(.disabled) {
      border-bottom: solid 2px av-color(content, av-opacity(disabled));
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }

    &.error {
      border: none;
      border-bottom: solid 2px av-color(error);
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
      fill: av-color(error);

      &:focus-within {
        border: none;
        border-bottom: solid 2px av-color(error);
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
      }

      .label {
        color: av-color(error);
      }

      .leadingIcon,
      .trailingIcon {
        fill: av-color(error);
      }
    }
  }

  .outline {
    background: center;
    color: av-color(primary);
    border: solid 1px av-color(content, av-opacity(divider));
    fill: av-color(content);

    &:hover:not(.active):not(.error):not(.disabled) {
      box-shadow: inset 0 0 0 2px av-color(content, av-opacity(disabled));
      border: solid 1px transparent;
    }

    &.error {
      box-shadow: inset 0 0 0 2px av-color(error);
      fill: av-color(error);
      border: solid 1px transparent;

      .label {
        color: av-color(error);
      }

      .leadingIcon,
      .trailingIcon {
        fill: av-color(error);
      }
    }
  }

  .options {
    cursor: pointer;

    input {
      cursor: pointer;
    }
  }

  .label {
    user-select: none;
    text-transform: capitalize;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: av-font-size(base);
    transition: 0.2s ease;
    color: av-color(content, av-opacity(medium));
    cursor: text;

    &.left {
      margin-left: av-space(loose);
    }
  }

  ::placeholder {
    visibility: hidden;
  }

  .inputBase {
    border: none;
    flex: 1;
    padding: 0;
    width: unset;

    input {
      @extend %av-body1;
      flex: 1;
      height: 100%;
      font-size: av-size(sz-16);
      color: av-color(content);
      padding: 0;
      background-color: transparent;

      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus,
      &:-webkit-autofill:active {
        transition: background-color 5000s ease-in-out 0s;
      }
    }

    textarea {
      @extend %av-scrollbar;
    }
  }

  .message {
    font-size: av-font-size(tiny);
    color: av-color(content);
    margin-top: av-space(micro);

    &.error {
      color: av-color(error);
    }
  }
}

.textFieldMenu {
  width: av-size(sz-240);
}

.view {
  display: flex;
  align-items: center;
  color: av-color(content);
  fill: av-color(content);

  .ellipsis {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }

  svg {
    margin-right: av-space(tiny);
  }

  label {
    @extend %av-caption;
    text-transform: capitalize;
    opacity: av-opacity(medium);
  }

  .none {
    color: av-color(content, av-opacity(disabled));
  }

  div {
    width: 100%;
    @extend %av-body1;
  }
}
