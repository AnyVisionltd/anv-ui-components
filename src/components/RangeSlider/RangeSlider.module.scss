@import '~@anyvision/style-guide';

@mixin rangeThumb {
  height: av-size(sz-24);
  width: av-size(sz-24);
  border-radius: av-radius(circle);
  background: av-color(purewhite);
  cursor: pointer;
  -webkit-transition: all 0.15s ease-in-out;
  transition: all 0.15s ease-in-out;
  border: av-color(primary) solid 3px;
  pointer-events: auto;

  &:hover {
    background: rgb(212, 212, 212);
    transform: scale(1.1);
  }

  &:active {
    box-shadow: 0 8px 16px 0.1px av-color(trueblack);
  }
}

@mixin rangeBar {
  border-radius: av-radius(tidy);
  background-color: av-color(primary, av-opacity(disabled));
  outline: none;
  cursor: pointer;
  height: 6px;
  width: 100%;
  max-width: 100vw;

  &:disabled,
  &.disabled {
    cursor: default;
    opacity: av-opacity(disabled);
  }
}

@mixin singleThumbRange($includeBar) {
  appearance: none;
  -webkit-appearance: none;
  outline: none;

  @if $includeBar == true {
    @include rangeBar;
  }

  @if $includeBar == false {
    background-color: transparent;
    width: 100%;
    pointer-events: none;
    position: absolute;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    @include rangeThumb;
  }

  &::-moz-range-thumb {
    -moz-appearance: none;
    @include rangeThumb;
  }
}

.container {
  height: fit-content;
  width: 100%;
  padding: 0 av-space(base);
  background-color: inherit;

  &.disabled {
    cursor: default;
    opacity: av-opacity(disabled);
  }
}

.rangeContainer {
  height: av-size(sz-24);
  padding: av-space(base) 0;
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  position: relative;
  font-family: inherit;

  &:focus-within {
    outline: none;
  }

  .label {
    position: absolute;
    color: av-color(content);
    font-size: av-font-size(tiny);
    bottom: 5px;
  }

  .minLabel {
    left: 5px;
  }

  .maxLabel {
    right: 5px;
  }

  .tooltip {
    position: absolute;
    z-index: av-z-index(popup);
    bottom: 85%;
    left: 50%;
    transform: translateX(-50%);
    padding: av-space(micro) av-space(tiny);
    border-radius: av-radius(tidy);
    color: av-color(purewhite);
    background-color: av-color(primary);
    font-size: av-font-size(tiny);

    &::before {
      content: '';
      position: absolute;
      background-color: av-color(primary);
      left: 50%;
      top: 98%;
      transform: translateX(-50%);
      z-index: av-z-index(popup);
      height: 5px;
      width: 10px;
      clip-path: polygon(100% 0, 0 0, 50% 100%);
    }
  }
}

$range-bg: av-color(primary, av-opacity(disabled));
$range-fill: av-color(primary);

:export {
  bg: $range-bg;
  fill: $range-fill;
}
