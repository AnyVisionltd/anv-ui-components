// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Animations/Scale Basic 1`] = `
<div>
  <div
    className="center"
  >
    <div
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "height": "250px",
        }
      }
    >
      <div
        className="marginFlexContainer"
      >
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from top, left to right
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from top, center
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from top, right to left
        </button>
      </div>
      <div
        className="marginFlexContainer"
      >
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from the middle, left to right
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          pop from center
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from middle, right to left
        </button>
      </div>
      <div
        className="marginFlexContainer"
      >
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from bottom, left to right
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from bottom, center
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          start from bottom, right to left
        </button>
      </div>
      <div
        className="marginFlexContainer"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Animations/Slide Basic 1`] = `
<div>
  <div
    className="center"
  >
    <div
      style={
        Object {
          "height": "150px",
        }
      }
    >
      <div
        className="marginFlexContainer"
      >
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          up
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          right
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          down
        </button>
        <button
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          left
        </button>
      </div>
      <div
        style={
          Object {
            "overflow": "hidden",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Button Default 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Text
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Button Disable 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Enable
      </button>
      <button
        className="button medium fill"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        Disabled
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Button Play Ground 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button large fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Button Text
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Button Sizes 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button large fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Large
      </button>
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        medium
      </button>
      <button
        className="button small fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        small
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Button Variants 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        fill
      </button>
      <button
        className="button medium outline"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        outline
      </button>
      <button
        className="button medium ghost"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        ghost
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Button With Class Name 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill successBackgroundColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Text
      </button>
      <button
        className="button medium outline alertColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Text
      </button>
      <button
        className="button medium ghost errorColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Text
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Button With Icon 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <span
        className="leadingIcon"
      >
        <svg />
      </span>
      leading
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Checkbox Default 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="checkbox enabled"
      htmlFor="checkbox-example"
    >
      <input
        checked={false}
        className="parent"
        disabled={false}
        id="checkbox-example"
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="checkboxLabel"
      htmlFor="checkbox-example"
    >
      Check me out!
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/Checkbox Playground 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="checkbox enabled"
      htmlFor="checkbox-playground"
    >
      <input
        checked={false}
        className="parent"
        disabled={false}
        id="checkbox-playground"
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="checkboxLabel"
      htmlFor="checkbox-playground"
    >
      Hit me!
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/Checkbox States 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="checkbox checked enabled microMargin"
    >
      <input
        checked={true}
        className="parent"
        disabled={false}
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      >
        <svg />
      </span>
    </label>
    <label
      className="checkbox enabled microMargin"
    >
      <input
        checked={false}
        className="parent"
        disabled={false}
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="checkbox checked disabled microMargin"
    >
      <input
        checked={true}
        className="parent"
        disabled={true}
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      >
        <svg />
      </span>
    </label>
    <label
      className="checkbox indeterminate enabled microMargin"
    >
      <input
        checked={false}
        className="parent"
        disabled={false}
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      >
        <svg />
      </span>
    </label>
    <label
      className="checkbox disabled microMargin"
    >
      <input
        checked={false}
        className="parent"
        disabled={true}
        onChange={[Function]}
        type="checkbox"
      />
      <span
        className="iconContainer"
      />
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/Chip Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="chip focusable clickable"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      <div
        className="leadingIcon"
      >
        <svg />
      </div>
      <span
        className="label"
      >
        Chocolate
      </span>
      <button
        className="trailingIcon trailingIconClickable"
        disabled={false}
        onClick={[Function]}
      >
        <svg />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Chip Playground 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="chip focusable clickable microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      <span
        className="label"
      >
        Chip
      </span>
      <button
        className="trailingIcon trailingIconClickable"
        disabled={false}
        onClick={[Function]}
      >
        <svg />
      </button>
    </div>
    <small
      className="tinyText"
    >
      Try focusing the chip using your keyboard, then clicking on backspace!
    </small>
  </div>
</div>
`;

exports[`Storyshots Components/Chip Variants 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="chip microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
    >
      <span
        className="label"
      >
        Simple
      </span>
    </div>
    <div
      className="chip focusable clickable microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      <span
        className="label"
      >
        Clickable
      </span>
    </div>
    <div
      aria-disabled={true}
      className="chip disabled microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
    >
      <span
        className="label"
      >
        Disabled
      </span>
    </div>
    <div
      className="chip microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
    >
      <div
        className="leadingIcon"
      >
        <svg />
      </div>
      <span
        className="label"
      >
        Leading Icon
      </span>
    </div>
    <div
      className="chip microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
    >
      <span
        className="label"
      >
        Trailing Icon
      </span>
      <button
        className="trailingIcon"
        disabled={false}
        onClick={[Function]}
      >
        <svg />
      </button>
    </div>
    <div
      className="chip microMargin"
      data-testid="chip"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="button"
    >
      <div
        className="leadingIcon"
      >
        <svg />
      </div>
      <span
        className="label"
      >
        Both Icons
      </span>
      <button
        className="trailingIcon"
        disabled={false}
        onClick={[Function]}
      >
        <svg />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Custom Chip Validation 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexColumn"
    >
      <span
        className="marginFlexContainer"
      >
        Only chips that contain 
        <b>
          abc
        </b>
         can be submitted.
      </span>
      <div
        className="ChipsInput"
      >
        <div
          className="container"
          onKeyDown={[Function]}
        >
          <div
            className="inputBase text inputBase"
          >
            <input
              autoComplete="off"
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Input text in here"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexColumn"
    >
      <div
        className="ChipsInput"
      >
        <div
          className="container"
          onKeyDown={[Function]}
        >
          <div
            className="inputBase text inputBase"
          >
            <input
              autoComplete="off"
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Input text in here"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
      <div
        className="microMargin"
      />
      <div
        className="ChipsInput"
      >
        <div
          className="container"
          onKeyDown={[Function]}
        >
          <div
            aria-disabled={true}
            className="chip disabled chipStyle"
            data-testid="chip"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <span
              className="label"
            >
              first
            </span>
          </div>
          <div
            aria-disabled={true}
            className="chip disabled chipStyle"
            data-testid="chip"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <span
              className="label"
            >
              second
            </span>
          </div>
          <div
            aria-disabled={true}
            className="chip disabled chipStyle"
            data-testid="chip"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <div
              className="leadingIcon"
            >
              <svg />
            </div>
            <span
              className="label"
            >
              third with icon
            </span>
          </div>
          <div
            className="inputBase text disabled inputBase"
          >
            <input
              autoComplete="off"
              disabled={true}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="+ Input text in here"
              type="text"
              value="Disabled Input"
            />
            <div
              className="trailingIcon"
            >
              <button
                aria-label="remove all"
                className="button medium ghost iconButton small ghost"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                <svg
                  className="cancelIcon"
                />
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Get Icon Handler 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexColumn"
    >
      <span
        className="marginFlexContainer"
      >
        Insert 
        <b>
          first
        </b>
         for 
        <b>
          Eye
        </b>
         icon, 
        <b>
          second
        </b>
         for 
        <b>
          Arrow
        </b>
         icon and everything else for 
        <b>
          Filter
        </b>
         icon
      </span>
      <div
        className="ChipsInput"
      >
        <div
          className="container"
          onKeyDown={[Function]}
        >
          <div
            className="inputBase text inputBase"
          >
            <input
              autoComplete="off"
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Input text in here"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Initial Values 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="ChipsInput"
    >
      <div
        className="container"
        onKeyDown={[Function]}
      >
        <div
          className="chip focusable clickable chipStyle"
          data-testid="chip"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            className="label"
          >
            first
          </span>
          <button
            className="trailingIcon trailingIconClickable"
            disabled={false}
            onClick={[Function]}
          >
            <svg />
          </button>
        </div>
        <div
          className="chip focusable clickable chipStyle"
          data-testid="chip"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            className="label"
          >
            second
          </span>
          <button
            className="trailingIcon trailingIconClickable"
            disabled={false}
            onClick={[Function]}
          >
            <svg />
          </button>
        </div>
        <div
          className="chip focusable clickable chipStyle"
          data-testid="chip"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <div
            className="leadingIcon"
          >
            <svg />
          </div>
          <span
            className="label"
          >
            third with icon
          </span>
          <button
            className="trailingIcon trailingIconClickable"
            disabled={false}
            onClick={[Function]}
          >
            <svg />
          </button>
        </div>
        <div
          className="inputBase text inputBase"
        >
          <input
            autoComplete="off"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="+ Input text in here"
            type="text"
            value="foo"
          />
          <div
            className="trailingIcon"
          >
            <button
              aria-label="remove all"
              className="button medium ghost iconButton small ghost"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <svg
                className="cancelIcon"
              />
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Place Holder 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="ChipsInput"
    >
      <div
        className="container"
        onKeyDown={[Function]}
      >
        <div
          className="inputBase text inputBase"
        >
          <input
            autoComplete="off"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Custom place holder"
            type="text"
            value=""
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/ChipsInput Play Ground 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="ChipsInput"
    >
      <div
        className="container"
        onKeyDown={[Function]}
      >
        <div
          className="inputBase text inputBase"
        >
          <input
            autoComplete="off"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Place holder"
            type="text"
            value=""
          />
        </div>
      </div>
      <label
        className="helperText"
      >
         
        This is the helper text
         
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Dialogs/Dialog Basic 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <button
        aria-controls="menu-story-default"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Dialog
      </button>
      <portal-for-test />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Dialogs/DialogWizard Basic 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <button
        aria-controls="menu-story-default"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Wizard
      </button>
      <portal-for-test />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Dialogs/DialogWizard Uncontrolled 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <button
        aria-controls="menu-story-default"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Wizard
      </button>
      <portal-for-test />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Dialogs/DialogWizard With Overlay 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <button
        aria-controls="menu-story-default"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Wizard
      </button>
      <portal-for-test />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton Default 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill iconButton small fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <svg
        height="1em"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
          data-name="Sun"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton Disable 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill iconButton small fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium fill iconButton small fill"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton Play Ground 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill iconButton small fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <svg
        height="1em"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
          data-name="Sun"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton Sizes 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill iconButton small fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium fill iconButton medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium fill iconButton large fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton Variants 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill iconButton small fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium outline iconButton small outline"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium ghost iconButton small ghost"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/IconButton With Class Name 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill iconButton small fill successBackgroundColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium outline iconButton small outline alertColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
      <button
        className="button medium ghost iconButton small ghost errorColor"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg
          height="1em"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
            data-name="Sun"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InfiniteList Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      style={
        Object {
          "height": "300px",
          "width": "80%",
        }
      }
    >
      <button
        className="button small ghost"
        disabled={false}
        onClick={[Function]}
        style={
          Object {
            "marginLeft": "auto",
          }
        }
        type="button"
      >
        scroll to top
      </button>
      <div
        style={
          Object {
            "height": 0,
            "overflow": "visible",
            "width": 0,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="inputBase text"
    >
      <input
        placeholder="Placeholder"
        type="text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase Disable 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="inputBase text"
      >
        <input
          placeholder="Enabled"
          type="text"
        />
      </div>
      <div
        className="inputBase text disabled"
      >
        <input
          disabled={true}
          placeholder="Disabled"
          type="text"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase Playground 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="inputBase text"
    >
      <input
        disabled={false}
        onChange={[Function]}
        readOnly={false}
        type="text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase States 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="inputBase text"
      >
        <input
          defaultValue="default value"
          placeholder="readOnly"
          readOnly={true}
          type="text"
        />
      </div>
      <div
        className="inputBase text"
      >
        <input
          defaultValue="Default Value"
          type="text"
        />
      </div>
      <div
        className="inputBase password"
      >
        <input
          placeholder="Password"
          type="password"
        />
        <button
          className="button medium ghost iconButton small ghost trailingIcon"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <svg />
        </button>
      </div>
      <div
        className="inputBase number"
      >
        <input
          placeholder="number"
          type="number"
        />
      </div>
      <div
        className="inputBase text multiline"
      >
        <textarea
          placeholder="Multiline"
          type="text"
        />
      </div>
      <div
        className="inputBase text multiline"
      >
        <textarea
          placeholder="Multiline 10 Rows"
          rows={10}
          type="text"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase With Icon 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="inputBase text"
      >
        <span
          className="leadingIcon"
        >
          <svg />
        </span>
        <input
          placeholder="With Icon"
          type="text"
        />
      </div>
      <div
        className="inputBase text multiline"
      >
        <span
          className="leadingIcon"
        >
          <svg />
        </span>
        <textarea
          placeholder="With Icon"
          type="text"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/InputBase Withtrailing Icon 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="inputBase text"
      >
        <input
          placeholder="With Last Icon"
          type="text"
        />
        <div
          className="trailingIcon"
        >
          <button
            className="button medium ghost iconButton small ghost"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <svg />
          </button>
        </div>
      </div>
      <div
        className="inputBase text multiline"
      >
        <textarea
          placeholder="With Last Icon"
          type="text"
        />
        <div
          className="trailingIcon"
        >
          <button
            className="button medium ghost iconButton small ghost"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <svg />
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/List Basic 1`] = `
<div>
  <div
    className="center"
  >
    <ul
      className="list"
      style={
        Object {
          "width": "400px",
        }
      }
    >
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 1
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 2
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 3
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 4
           
        </div>
        <div />
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components/List With Leading 1`] = `
<div>
  <div
    className="center"
  >
    <ul
      className="list"
      style={
        Object {
          "width": "400px",
        }
      }
    >
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 1
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 2
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 3
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 4
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 5
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 6
           
        </div>
        <div />
      </li>
      <li
        className="listItem"
      >
        <div>
          <label
            className="checkbox enabled"
          >
            <input
              checked={false}
              className="parent"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              className="iconContainer"
            />
          </label>
        </div>
        <div
          className="content"
        >
           
          Item 7
           
        </div>
        <div />
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components/List With Trailing 1`] = `
<div>
  <div
    className="center"
  >
    <ul
      className="list"
      style={
        Object {
          "width": "400px",
        }
      }
    >
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 1
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 2
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 3
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 4
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 5
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 6
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
      <li
        className="listItem"
      >
        <div />
        <div
          className="content"
        >
           
          Item 7
           
        </div>
        <div>
          <button
            className="button small fill"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Components/Menu Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="menuExample"
    >
      <button
        aria-controls="menu-story-default"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Pizza Toppings
      </button>
      <portal-for-test>
        <div
          className="menuContainer"
        />
      </portal-for-test>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Menu Different Positions 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="menuExample"
    >
      <button
        aria-controls="menu-story"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        style={
          Object {
            "left": 10,
            "position": "absolute",
            "top": 10,
          }
        }
        type="button"
      >
        Top, Left
      </button>
      <button
        aria-controls="menu-story"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        style={
          Object {
            "position": "absolute",
            "right": 10,
            "top": 10,
          }
        }
        type="button"
      >
        Top, Right
      </button>
      <button
        aria-controls="menu-story"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        style={
          Object {
            "bottom": 10,
            "left": 10,
            "position": "absolute",
          }
        }
        type="button"
      >
        Bottom, Left
      </button>
      <button
        aria-controls="menu-story"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        style={
          Object {
            "bottom": 10,
            "position": "absolute",
            "right": 10,
          }
        }
        type="button"
      >
        Bottom, Right
      </button>
      <div
        className="tinyText"
      >
        Best viewed in canvas mode
      </div>
      <portal-for-test>
        <div
          className="menuContainer"
        />
      </portal-for-test>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Menu Prefer Open To Direction 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="menuExample"
    >
      <button
        aria-controls="menu-story"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Menu
      </button>
      <portal-for-test>
        <div
          className="menuContainer"
        />
      </portal-for-test>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Menu Variants 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="menuExample"
    >
      <div
        className="microMargin"
      >
        <button
          aria-controls="menu-story-regular"
          aria-haspopup="true"
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          Regular
        </button>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
      </div>
      <div
        className="microMargin"
      >
        <button
          aria-controls="menu-story-dense"
          aria-haspopup="true"
          className="button medium fill"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          Dense
        </button>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Menu With Sub Menus 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="menuExample"
    >
      <button
        aria-controls="menu-story-submenu"
        aria-haspopup="true"
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Open Menu
      </button>
      <portal-for-test>
        <div
          className="menuContainer"
        />
      </portal-for-test>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Radio Default 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="radio"
      htmlFor="radio-example"
    >
      <input
        checked={false}
        disabled={false}
        id="radio-example"
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="checkboxLabel"
      htmlFor="radio-example"
    >
      Check me out!
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/Radio Playground 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="radio"
      htmlFor="radio-playground"
    >
      <input
        checked={false}
        disabled={false}
        id="radio-playground"
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="checkboxLabel"
      htmlFor="radio-playground"
    >
      Hit me!
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/Radio States 1`] = `
<div>
  <div
    className="center"
  >
    <label
      className="radio checked microMargin"
    >
      <input
        checked={true}
        disabled={false}
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      >
        <span
          className="circle"
        />
      </span>
    </label>
    <label
      className="radio microMargin"
    >
      <input
        checked={false}
        disabled={false}
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      />
    </label>
    <label
      className="radio checked disabled microMargin"
    >
      <input
        checked={true}
        disabled={true}
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      >
        <span
          className="circle"
        />
      </span>
    </label>
    <label
      className="radio disabled microMargin"
    >
      <input
        checked={false}
        disabled={true}
        onChange={[Function]}
        type="radio"
      />
      <span
        className="iconContainer"
      />
    </label>
  </div>
</div>
`;

exports[`Storyshots Components/SSF Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <div
        className="SmartFilter"
      >
        <div
          className="elevationOverlay"
        />
        <button
          className="button medium fill searchFilter"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <svg />
        </button>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
        <div
          className="ChipsInput chipInput"
        >
          <div
            className="container"
            onKeyDown={[Function]}
          >
            <div
              className="inputBase text inputBase"
            >
              <input
                autoComplete="off"
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Add tag to filter or free type to search"
                type="text"
                value=""
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/SSF Without Menu Fields 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <div
        className="SmartFilter"
      >
        <div
          className="elevationOverlay"
        />
        <button
          className="button medium fill searchFilter"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <svg />
        </button>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
        <div
          className="ChipsInput chipInput"
        >
          <div
            className="container"
            onKeyDown={[Function]}
          >
            <div
              className="inputBase text inputBase"
            >
              <input
                autoComplete="off"
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Add tag to filter or free type to search"
                type="text"
                value=""
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/SkeletonLoader Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      style={
        Object {
          "width": "500px",
        }
      }
    >
      <div
        className="skeletonLoader microMargin"
        style={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      />
      <div
        className="skeletonLoader microMargin"
      />
      <div
        className="skeletonLoader microMargin"
      />
      <div
        className="skeletonLoader microMargin"
      />
      <div
        className="skeletonLoader microMargin"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Snackbar Action 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      With Action
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Snackbar Close Icon 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Default Icon
      </button>
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Custom Icon
      </button>
      <button
        className="button medium fill"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Without Icon
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Snackbar Default 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Open
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Snackbar Leading Icon 1`] = `
<div>
  <div
    className="center"
  >
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      With Leading Icon
    </button>
  </div>
</div>
`;

exports[`Storyshots Components/Switch Default 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <div
        className="switch enabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-example"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={true}
              disabled={false}
              id="switch-example"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
      <label
        htmlFor="switch-example"
      >
        Check me out!
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Switch Multiple Switches 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <div
        className="switch unchecked enabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-example1"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={false}
              disabled={false}
              id="switch-example1"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
      <div
        className="switch enabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-example2"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={true}
              disabled={false}
              id="switch-example2"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
      <div
        className="switch unchecked disabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-example3"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={false}
              disabled={true}
              id="switch-example3"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
      <div
        className="switch disabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-example4"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={true}
              disabled={true}
              id="switch-example4"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Switch Playground 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="marginFlexContainer"
    >
      <div
        className="switch unchecked enabled"
      >
        <label
          className="switchLabel"
          htmlFor="switch-playground"
        >
          <div
            className="switchLine"
          />
          <div
            className="switchToggle"
          >
            <span
              className="switchToggleInner"
            />
            <input
              defaultChecked={false}
              disabled={false}
              id="switch-playground"
              onChange={[Function]}
              type="checkbox"
            />
          </div>
        </label>
      </div>
      <label
        htmlFor="switch-playground"
      >
        Hit me!
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Table Basic 1`] = `
<div>
  <div
    className="table"
    style={
      Object {
        "height": "450px",
        "width": "100%",
      }
    }
  >
    <div
      className="SmartFilter TableSSF"
    >
      <div
        className="elevationOverlay"
      />
      <button
        className="button medium fill searchFilter"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <svg />
      </button>
      <portal-for-test>
        <div
          className="menuContainer"
        />
      </portal-for-test>
      <div
        className="ChipsInput chipInput"
      >
        <div
          className="container"
          onKeyDown={[Function]}
        >
          <div
            className="inputBase text inputBase"
          >
            <input
              autoComplete="off"
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Add tag to filter or free type to search"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
    <div>
      <div
        className="results"
      >
        0
         
        Results
      </div>
      <div
        className="tableHeader"
        role="row"
      />
    </div>
    <div
      className="tableBody"
    >
      <div
        style={
          Object {
            "height": 0,
            "overflow": "visible",
            "width": 0,
          }
        }
      />
    </div>
    <portal-for-test />
  </div>
</div>
`;

exports[`Storyshots Components/Table Infinite Scroll 1`] = `
<div>
  <div
    className="table"
    style={
      Object {
        "height": "400px",
        "width": "100%",
      }
    }
  >
    <div>
      <div
        className="results"
      >
        0
         
        Results
      </div>
      <div
        className="tableHeader"
        role="row"
      />
    </div>
    <div
      className="tableBody"
    >
      <div
        style={
          Object {
            "height": 0,
            "overflow": "visible",
            "width": 0,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField Disabled 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium disabled"
          onClick={[Function]}
        >
          <label
            className="label left"
          />
          <div
            className="inputBase text disabled inputBase"
          >
            <span
              className="leadingIcon leadingIcon"
            >
              <svg />
            </span>
            <input
              disabled={true}
              id="textField-9"
              onChange={[Function]}
              placeholder="disabled"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium disabled"
          onClick={[Function]}
        >
          <label
            className="label left"
          />
          <div
            className="inputBase text disabled inputBase"
          >
            <span
              className="leadingIcon leadingIcon"
            >
              <svg />
            </span>
            <input
              disabled={true}
              id="textField-10"
              onChange={[Function]}
              placeholder="disabled"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField Play Ground 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-26"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
              value="select something"
            />
          </div>
        </div>
        <span
          className="message"
        >
          message
        </span>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-27"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
              value="select something"
            />
          </div>
        </div>
        <span
          className="message"
        >
          message
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField Sizes 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              defaultValue="medium"
              id="textField-3"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text small notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              defaultValue="small"
              id="textField-4"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField Type Options 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline options medium notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase options inputBase"
          >
            <input
              defaultValue="Olives"
              id="textField-21"
              onChange={[Function]}
              readOnly={true}
              type="options"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill options medium notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase options inputBase"
          >
            <input
              defaultValue="Olives"
              id="textField-22"
              onChange={[Function]}
              readOnly={true}
              type="options"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField Type Password 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline password medium notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase password inputBase"
          >
            <input
              defaultValue="secret"
              id="textField-24"
              onChange={[Function]}
              readOnly={false}
              type="password"
            />
            <button
              className="button medium ghost iconButton small ghost trailingIcon trailingIcon"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <svg />
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Default Value 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium notEmpty withLabel"
          onClick={[Function]}
        >
          <label
            className="label"
          >
            label
          </label>
          <div
            className="inputBase text inputBase bottom"
          >
            <input
              defaultValue="default value"
              id="textField-1"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium notEmpty withLabel"
          onClick={[Function]}
        >
          <label
            className="label"
          >
            label
          </label>
          <div
            className="inputBase text inputBase bottom"
          >
            <input
              defaultValue="default value"
              id="textField-2"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Error 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium error"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-15"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <span
          className="message error"
        >
          This is an error
        </span>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium error"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-16"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <span
          className="message error"
        >
          This is an error
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Label 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium notEmpty withLabel"
          onClick={[Function]}
        >
          <label
            className="label"
          >
            label
          </label>
          <div
            className="inputBase text inputBase bottom"
          >
            <input
              defaultValue="Olives"
              onChange={[Function]}
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Leading Icon 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label left"
          />
          <div
            className="inputBase text inputBase"
          >
            <span
              className="leadingIcon leadingIcon"
            >
              <svg />
            </span>
            <input
              id="textField-7"
              onChange={[Function]}
              placeholder="With leading Icon"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium"
          onClick={[Function]}
        >
          <label
            className="label left"
          />
          <div
            className="inputBase text inputBase"
          >
            <span
              className="leadingIcon leadingIcon"
            >
              <svg />
            </span>
            <input
              id="textField-8"
              onChange={[Function]}
              placeholder="With leading Icon"
              readOnly={false}
              type="text"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Message 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-13"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <span
          className="message"
        >
          Optional helper text goes here
        </span>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-14"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <span
          className="message"
        >
          Optional helper text goes here
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Multiline 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium multiline"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text multiline inputBase"
          >
            <textarea
              id="textField-17"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              rows={5}
              type="text"
            />
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium multiline"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text multiline inputBase"
          >
            <textarea
              id="textField-18"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              rows={5}
              type="text"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Placeholder 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Read Only 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium readOnly notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              defaultValue="text"
              id="textField-19"
              onChange={[Function]}
              placeholder="This is read only text"
              readOnly={true}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium readOnly notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              defaultValue="text"
              id="textField-20"
              onChange={[Function]}
              placeholder="This is read only text"
              readOnly={true}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Render Item 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline options medium notEmpty"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase options inputBase"
          >
            <input
              defaultValue="Olives"
              id="textField-25"
              onChange={[Function]}
              readOnly={true}
              type="options"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
        <portal-for-test>
          <div
            className="menuContainer"
          />
        </portal-for-test>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Trailing Icon 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-11"
              onChange={[Function]}
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
      <div
        className="container"
      >
        <div
          className="TextField fill text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-12"
              onChange={[Function]}
              readOnly={false}
              type="text"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/TextField With Value 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="flexMultipleRows"
    >
      <div
        className="container"
      >
        <div
          className="TextField outline text medium"
          onClick={[Function]}
        >
          <label
            className="label"
          />
          <div
            className="inputBase text inputBase"
          >
            <input
              id="textField-23"
              onChange={[Function]}
              placeholder="placeholder"
              readOnly={false}
              type="text"
              value="Olives"
            />
            <div
              className="trailingIcon trailingIcon"
            >
              <svg />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Tooltip Arrow Variations 1`] = `
<div>
  <div
    className="center"
  >
    <div
      style={
        Object {
          "textAlign": "center",
        }
      }
    >
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        Right
      </h6>
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        Left
      </h6>
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        Top
      </h6>
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        Bottom
      </h6>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Tooltip Default 1`] = `
<div>
  <div
    className="center"
  >
    <h6
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Hover over me!
    </h6>
  </div>
</div>
`;

exports[`Storyshots Components/Tooltip Interactive 1`] = `
<div>
  <div
    className="center"
  >
    <h6
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Hover over me!
    </h6>
  </div>
</div>
`;

exports[`Storyshots Components/Tooltip Overflow Only 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        style={
          Object {
            "overflow": "hidden",
            "whiteSpace": "nowrap",
            "width": "50px",
          }
        }
      >
        shot text
      </h6>
      <h6
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        style={
          Object {
            "overflow": "hidden",
            "textOverflow": "ellipsis",
            "whiteSpace": "nowrap",
            "width": "50px",
          }
        }
      >
        long long long long long long text
      </h6>
    </div>
  </div>
</div>
`;

exports[`Storyshots Icons/Icons All 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="container"
    >
      <div
        className="comment"
      >
        * The following icons import from
        <a
          href="https://github.com/AnyVisionltd/anv-icons"
        >
          @anyvision/anv-icons
        </a>
        .
      </div>
      <div
        className="searchAndCodeContainer"
      >
        <div
          className="container search"
        >
          <div
            className="TextField outline text medium"
            onClick={[Function]}
          >
            <label
              className="label"
            />
            <div
              className="inputBase text inputBase"
            >
              <input
                onChange={[Function]}
                placeholder="Search"
                readOnly={false}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>
        <div
          className="docblock-source css-q35ldn"
        >
          <div
            className="os-host"
          >
            <div
              className="os-resize-observer-host"
            />
            <div
              className="os-padding"
            >
              <div
                className="os-viewport"
              >
                <div
                  className="os-content"
                >
                  <pre
                    className="prismjs css-4zr3vl"
                    style={Object {}}
                  >
                    <code
                      className="language-js css-1maezg8"
                    >
                      <span
                        className="token comment"
                      >
                        //import
                      </span>
                      <span
                        className=""
                      >
                        

                      </span>
                      <span
                        className=""
                      >
                        
                      </span>
                      <span
                        className="token keyword module"
                      >
                        import
                      </span>
                      <span
                        className=""
                      >
                         
                      </span>
                      <span
                        className="token punctuation"
                      >
                        {
                      </span>
                      <span
                        className=""
                      >
                         
                      </span>
                      <span
                        className="token maybe-class-name"
                      >
                        IconName
                      </span>
                      <span
                        className=""
                      >
                         
                      </span>
                      <span
                        className="token punctuation"
                      >
                        }
                      </span>
                      <span
                        className=""
                      >
                         
                      </span>
                      <span
                        className="token keyword module"
                      >
                        from
                      </span>
                      <span
                        className=""
                      >
                         
                      </span>
                      <span
                        className="token string"
                      >
                        '@anyvision/icons'
                      </span>
                      <span
                        className=""
                      >
                        

                      </span>
                      <span
                        className=""
                      >
                        
                      </span>
                      <span
                        className="token comment"
                      >
                        // use        
                      </span>
                      <span
                        className=""
                      >
                        

                      </span>
                      <span
                        className=""
                      >
                        
                      </span>
                      <span
                        className="token operator"
                      >
                        &lt;
                      </span>
                      <span
                        className="token maybe-class-name"
                      >
                        IconName
                      </span>
                      <span
                        className="token operator"
                      >
                        /
                      </span>
                      <span
                        className="token operator"
                      >
                        &gt;
                      </span>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <div
              className="os-scrollbar os-scrollbar-horizontal "
            >
              <div
                className="os-scrollbar-track"
              >
                <div
                  className="os-scrollbar-handle"
                />
              </div>
            </div>
            <div
              className="os-scrollbar os-scrollbar-vertical"
            >
              <div
                className="os-scrollbar-track"
              >
                <div
                  className="os-scrollbar-handle"
                />
              </div>
            </div>
            <div
              className="os-scrollbar-corner"
            />
          </div>
          <div
            className="css-1xxxe71"
          >
            <button
              className="css-wn6lpt"
              onClick={[Function]}
            >
              Copy
            </button>
          </div>
        </div>
      </div>
      <div
        className="icons"
      >
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Arrow solid down"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12.753 15.372a1 1 0 01-1.505 0l-3.8-4.339A1 1 0 018.2 9.375h7.6a1 1 0 01.749 1.657z"
              data-name="Arrow solid down"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            ArrowSolidDown
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M15.318 11.249a1 1 0 010 1.505l-4.339 3.8a1 1 0 01-1.658-.752v-7.6a1 1 0 011.657-.749z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            ArrowSolidRight
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 16 16"
            width="1em"
          >
            <path
              d="M9.131 8.001l2.634-2.634a.8.8 0 10-1.131-1.131L8.001 6.869 5.366 4.235a.8.8 0 10-1.131 1.131l2.634 2.635-2.634 2.633a.8.8 0 101.131 1.131l2.635-2.634 2.634 2.634a.8.8 0 101.131-1.131z"
              data-name="Path 2223"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Cancel
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Cancel X"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 20A8 8 0 016.344 6.343a8 8 0 1111.312 11.31A7.941 7.941 0 0112 20zm0-6.871l2.633 2.634a.841.841 0 00.316.2.806.806 0 00.251.037.791.791 0 00.564-.234A.8.8 0 0016 15.2a.793.793 0 00-.234-.564L13.131 12l2.633-2.634a.8.8 0 000-1.131.8.8 0 00-1.131 0L12 10.87 9.365 8.236a.8.8 0 00-1.131 0 .8.8 0 000 1.131L10.869 12l-2.635 2.635A.792.792 0 008 15.2a.8.8 0 00.8.8.791.791 0 00.564-.234L12 13.131z"
              data-name="Subtraction 5"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            CancelFilled
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M18.441 7.037a.961.961 0 00-1.364 0L9.92 14.201l-3.006-3.016a.982.982 0 10-1.364 1.412l3.689 3.689a.961.961 0 001.364 0l7.838-7.839a.961.961 0 000-1.412z"
              data-name="check"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Check
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 8 2"
            width="1em"
          >
            <rect
              data-name="Rectangle 2782"
              height={2}
              rx={1}
              width={8}
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            CheckboxIndeterminate
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 8 5.955"
            width="1em"
          >
            <path
              className="Checked_svg__cls-1"
              d="M6.549.247L2.9 3.901l-1.4-1.4a.851.851 0 10-1.2 1.2l2 2.007a.852.852 0 001.2 0l4.253-4.253a.851.851 0 00-1.2-1.208z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Checked
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M13.406 11.998l4.3-4.286a1.003 1.003 0 10-1.42-1.418L12 10.594l-4.286-4.3a1.003 1.003 0 00-1.418 1.418l4.3 4.286-4.3 4.286a1.003 1.003 0 101.418 1.42l4.286-4.3 4.286 4.3a1.004 1.004 0 101.42-1.42z"
              data-name="Close"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Close
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <defs>
              <style />
            </defs>
            <g
              id="Drag_svg__prefix__Drag"
            >
              <g
                id="Drag_svg__prefix__dots"
                transform="translate(7.5 4.5)"
              >
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_357"
                  r={1.5}
                />
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_362"
                  r={1.5}
                  transform="translate(6)"
                />
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_358"
                  r={1.5}
                  transform="translate(0 6)"
                />
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_361"
                  r={1.5}
                  transform="translate(6 6)"
                />
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_359"
                  r={1.5}
                  transform="translate(0 12)"
                />
                <circle
                  className="Drag_svg__prefix__cls-3"
                  cx={1.5}
                  cy={1.5}
                  id="Drag_svg__prefix__Ellipse_360"
                  r={1.5}
                  transform="translate(6 12)"
                />
              </g>
            </g>
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Drag
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Error Circle - Outlined"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 12.75a.75.75 0 00.75-.75V9a.75.75 0 00-1.5 0v3a.75.75 0 00.75.75zm-.285 2.94a.775.775 0 00.818-.158.863.863 0 00.158-.248.63.63 0 00.06-.285.75.75 0 00-.218-.532.862.862 0 00-.248-.158.75.75 0 00-1.035.691.788.788 0 00.217.532.75.75 0 00.248.158zM12 19.5A7.5 7.5 0 104.5 12a7.5 7.5 0 007.5 7.5zM12 6a6 6 0 11-6 6 6 6 0 016-6z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            ErrorCircleOutlined
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Eye disabled"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M11.204 7.561a5.2 5.2 0 01.8-.057c2.384 0 4.625 1.717 5.93 4.5a11.417 11.417 0 01-.675 1.229.749.749 0 101.274.787 11.822 11.822 0 00.907-1.724.75.75 0 000-.592c-1.519-3.52-4.367-5.7-7.436-5.7a5.825 5.825 0 00-1.049.09.76.76 0 10.255 1.5zM5.785 4.72A.753.753 0 004.72 5.785l2.324 2.319a10.96 10.96 0 00-2.481 3.6.75.75 0 000 .6c1.514 3.516 4.363 5.7 7.436 5.7a6.942 6.942 0 003.786-1.154l2.429 2.436a.753.753 0 101.064-1.064zm4.767 6.889l1.837 1.837a1.357 1.357 0 01-.39.052 1.5 1.5 0 01-1.495-1.494 1.357 1.357 0 01.048-.395zm1.452 4.888c-2.384 0-4.625-1.717-5.922-4.5a9.063 9.063 0 012.022-2.839l1.324 1.346a3 3 0 004.07 4.07l1.192 1.177a5.427 5.427 0 01-2.691.75z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            EyeDisabled
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Eye enabled"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19.438 11.701c-1.515-3.518-4.364-5.7-7.434-5.7s-5.926 2.182-7.441 5.7a.75.75 0 000 .6c1.515 3.514 4.364 5.7 7.441 5.7s5.923-2.182 7.437-5.7a.75.75 0 00-.003-.6zm-7.434 4.8c-2.377 0-4.626-1.717-5.923-4.5 1.294-2.784 3.543-4.5 5.923-4.5s4.626 1.717 5.923 4.5c-1.301 2.779-3.55 4.5-5.923 4.5zm0-7.5a3 3 0 103 3 3 3 0 00-3-3zm0 4.5a1.5 1.5 0 111.5-1.5 1.5 1.5 0 01-1.5 1.5z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            EyeEnabled
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M5.25 9h13.5a.75.75 0 100-1.5H5.25a.75.75 0 100 1.5zM15 15H9a.75.75 0 000 1.5h6a.75.75 0 000-1.5zm1.875-3.75h-9.75a.75.75 0 000 1.5h9.75a.75.75 0 000-1.5z"
              data-name="Filter"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Filter
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Long Arrow"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12.71 19.71a1.034 1.034 0 01-1.42 0l-4-4a1.004 1.004 0 011.42-1.42l2.29 2.3V4.995a1 1 0 012 0v11.59l2.29-2.3a1.004 1.004 0 111.42 1.42z"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            LongArrow
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="Manage cols"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M14.997 16.999a2 2 0 01-2-2v-6a2 2 0 012-2h4a2 2 0 012 2v6a2 2 0 01-2 2zm1.623-4.674v1.624a.523.523 0 00.142.355.5.5 0 00.711 0 .484.484 0 00.148-.355l-.005-1.624 1.623.006a.486.486 0 00.356-.149.5.5 0 000-.706.491.491 0 00-.356-.146h-1.623l.005-1.619a.5.5 0 10-1 0v1.62h-1.618a.481.481 0 00-.356.146.486.486 0 00-.149.355.507.507 0 00.5.5l1.615-.006zM4.583 16.217a.83.83 0 110-1.66h5.81a.83.83 0 110 1.66zm0-3.32a.83.83 0 010-1.661h5.81a.83.83 0 010 1.661zm0-3.32a.83.83 0 010-1.66h5.81a.83.83 0 110 1.66z"
              data-name="Manage cols"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            ManageColumn
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            data-name="more vertical"
            height="1em"
            viewBox="0 0 12 24"
            width="1em"
          >
            <path
              d="M6.001 16.5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm0-6a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm0-6a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5z"
              data-name="Union 48"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Options
          </span>
        </div>
        <div
          className="iconCard"
          onClick={[Function]}
        >
          <svg
            className="icon"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M6.75 16.125l-.586.586a.823.823 0 001.163 1.163l.586-.586a.825.825 0 00-1.163-1.163zM6.225 12a.825.825 0 00-.825-.825h-.825a.825.825 0 100 1.65H5.4A.825.825 0 006.225 12zM12 6.225a.825.825 0 00.825-.825v-.825a.825.825 0 10-1.65 0V5.4a.825.825 0 00.825.825zM6.75 7.916A.824.824 0 007.916 6.75l-.586-.586a.825.825 0 00-1.163 1.167zm9.9.239a.825.825 0 00.578-.239l.586-.586a.825.825 0 10-1.164-1.163l-.525.583a.822.822 0 00.545 1.4zm2.772 3.019H18.6a.825.825 0 000 1.65h.825a.825.825 0 100-1.65zm-7.425 6.6a.825.825 0 00-.825.825v.825a.825.825 0 101.65 0V18.6a.825.825 0 00-.822-.825zm5.247-1.65a.825.825 0 00-1.119 1.126l.586.586a.823.823 0 101.163-1.163zM12 7.463a4.537 4.537 0 104.537 4.538A4.538 4.538 0 0012 7.463zm0 7.425a2.887 2.887 0 112.887-2.887A2.887 2.887 0 0112 14.888z"
              data-name="Sun"
            />
          </svg>
          <span
            className="name"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            Sun
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Style/Colors Additional 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="colors"
    >
      <div
        className="sirius"
      >
        Sirius
      </div>
      <div
        className="earth"
      >
        Earth
      </div>
      <div
        className="procyon"
      >
        Procyon
      </div>
      <div
        className="sun"
      >
        Sun
      </div>
      <div
        className="canopus"
      >
        Canopus
      </div>
      <div
        className="achernar"
      >
        Achernar
      </div>
      <div
        className="altair"
      >
        Altair
      </div>
      <div
        className="antares"
      >
        Antares
      </div>
      <div
        className="vega"
      >
        Vega
      </div>
      <div
        className="betelgeuse"
      >
        Betelgeuse
      </div>
      <div
        className="aldebaran"
      >
        Aldebaran
      </div>
      <div
        className="pollux"
      >
        Pollux
      </div>
      <div
        className="rigel"
      >
        Rigel
      </div>
      <div
        className="agena"
      >
        Agena
      </div>
      <div
        className="spica"
      >
        Spica
      </div>
      <div
        className="mimosa"
      >
        Mimosa
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Style/Colors Base 1`] = `
<div>
  <div
    className="center"
  >
    <div
      className="colors"
    >
      <div
        className="primary"
      >
        Primary
      </div>
      <div
        className="secondary"
      >
        Secondary
      </div>
      <div
        className="accent"
      >
        Accent
      </div>
      <div
        className="decorative"
      >
        Decorative
      </div>
      <div
        className="content"
      >
        Content
      </div>
      <div
        className="surface"
      >
        Surface
      </div>
      <div
        className="purewhite"
      >
        Pure White
      </div>
      <div
        className="trueblack"
      >
        True Black
      </div>
      <div
        className="success"
      >
        Success
      </div>
      <div
        className="alert"
      >
        Alert
      </div>
      <div
        className="error"
      >
        Error
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Style/Colors Elevation 1`] = `
<div>
  <div
    className="center"
  >
    <div>
      <div
        className="colors elevation"
      >
        <div
          className="raised"
        >
          raised
        </div>
        <div
          className="overlay"
        >
          overlay
        </div>
        <div
          className="sticky"
        >
          sticky
        </div>
        <div
          className="temporary"
        >
          temporary
        </div>
        <div
          className="popOut"
        >
          pop-out
        </div>
      </div>
      <center>
        <h6>
          Try to use the theme toggle :)
        </h6>
      </center>
    </div>
  </div>
</div>
`;

exports[`Storyshots Utils/FileUpload Basic 1`] = `
<div>
  <div
    className="center"
  >
    <input
      className="hide"
      onChange={[Function]}
      onClick={[Function]}
      type="file"
    />
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Upload File
    </button>
  </div>
</div>
`;

exports[`Storyshots Utils/FileUpload Just Image 1`] = `
<div>
  <div
    className="center"
  >
    <input
      accept="image/*"
      className="hide"
      onChange={[Function]}
      onClick={[Function]}
      type="file"
    />
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Upload Images
    </button>
  </div>
</div>
`;

exports[`Storyshots Utils/FileUpload Multiple 1`] = `
<div>
  <div
    className="center"
  >
    <input
      className="hide"
      multiple={true}
      onChange={[Function]}
      onClick={[Function]}
      type="file"
    />
    <button
      className="button medium fill"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Upload Files
    </button>
  </div>
</div>
`;

exports[`Storyshots Utils/Portal Default 1`] = `
<div>
  <portal-for-test>
    <h3>
      Inspect Me. Im on the body
    </h3>
  </portal-for-test>
</div>
`;
